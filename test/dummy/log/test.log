Connecting to database specified by database.yml
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (349ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (7ms) push_notification_extension_test['system.namespaces'].find({})
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
Processing by OutagesController#create as HTML
  Parameters: {"outage"=>{"title"=>"blackout"}}
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5c90772c96f519000002'), "title"=>"blackout", "updated_at"=>2012-08-29 18:16:48 UTC, "created_at"=>2012-08-29 18:16:48 UTC}])
Redirected to http://test.host/outages/503e5c90772c96f519000002
Completed 302 Found in 5ms
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
Processing by OutagesController#index as HTML
MONGODB (0ms) push_notification_extension_test['outages'].find({})
Completed 200 OK in 221ms (Views: 220.8ms)
Processing by OutagesController#new as HTML
  Rendered outages/_form.html.erb (81.2ms)
Completed 200 OK in 96ms (Views: 95.4ms)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) push_notification_extension_test['system.namespaces'].find({})
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd4772c96f5ae000001'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:56 UTC, "created_at"=>2012-08-29 18:17:56 UTC}])
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
Processing by OutagesController#create as HTML
  Parameters: {"outage"=>{"title"=>"blackout"}}
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd4772c96f5ae000002'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:56 UTC, "created_at"=>2012-08-29 18:17:56 UTC}])
Redirected to http://test.host/outages/503e5cd4772c96f5ae000002
Completed 302 Found in 3ms
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd4772c96f5ae000003'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:56 UTC, "created_at"=>2012-08-29 18:17:56 UTC}])
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
Processing by OutagesController#destroy as HTML
  Parameters: {"id"=>"503e5cd4772c96f5ae000003"}
MONGODB (0ms) push_notification_extension_test['outages'].find({:_id=>BSON::ObjectId('503e5cd4772c96f5ae000003')}).limit(-1).sort([[:_id, :asc]])
MONGODB (0ms) push_notification_extension_test['outages'].remove({:_id=>BSON::ObjectId('503e5cd4772c96f5ae000003')})
Redirected to http://test.host/outages
Completed 302 Found in 2ms
MONGODB (0ms) push_notification_extension_test['$cmd'].find({"count"=>"outages", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd4772c96f5ae000004'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:56 UTC, "created_at"=>2012-08-29 18:17:56 UTC}])
Processing by OutagesController#edit as HTML
  Parameters: {"id"=>"503e5cd4772c96f5ae000004"}
MONGODB (0ms) push_notification_extension_test['outages'].find({:_id=>BSON::ObjectId('503e5cd4772c96f5ae000004')}).limit(-1).sort([[:_id, :asc]])
  Rendered outages/_form.html.erb (79.8ms)
Completed 200 OK in 239ms (Views: 237.9ms)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd5772c96f5ae000005'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:57 UTC, "created_at"=>2012-08-29 18:17:57 UTC}])
Processing by OutagesController#index as HTML
MONGODB (0ms) push_notification_extension_test['outages'].find({})
Completed 200 OK in 8ms (Views: 7.2ms)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd5772c96f5ae000006'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:57 UTC, "created_at"=>2012-08-29 18:17:57 UTC}])
Processing by OutagesController#new as HTML
  Rendered outages/_form.html.erb (1.6ms)
Completed 200 OK in 5ms (Views: 4.2ms)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd5772c96f5ae000008'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:57 UTC, "created_at"=>2012-08-29 18:17:57 UTC}])
Processing by OutagesController#show as HTML
  Parameters: {"id"=>"503e5cd5772c96f5ae000008"}
MONGODB (0ms) push_notification_extension_test['outages'].find({:_id=>BSON::ObjectId('503e5cd5772c96f5ae000008')}).limit(-1).sort([[:_id, :asc]])
Completed 200 OK in 4ms (Views: 2.5ms)
MONGODB (0ms) push_notification_extension_test['outages'].insert([{"_id"=>BSON::ObjectId('503e5cd5772c96f5ae000009'), "title"=>"blackout", "updated_at"=>2012-08-29 18:17:57 UTC, "created_at"=>2012-08-29 18:17:57 UTC}])
Processing by OutagesController#update as HTML
  Parameters: {"outage"=>{"title"=>"blackout"}, "id"=>"503e5cd5772c96f5ae000009"}
MONGODB (0ms) push_notification_extension_test['outages'].find({:_id=>BSON::ObjectId('503e5cd5772c96f5ae000009')}).limit(-1).sort([[:_id, :asc]])
Redirected to http://test.host/outages/503e5cd5772c96f5ae000009
Completed 302 Found in 2ms
